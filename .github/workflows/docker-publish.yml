name: Build and Publish Docker Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches
      
      - name: Verify repository contents
        run: |
          echo "=== Repository Contents ==="
          ls -la
          echo ""
          
          if [ -f "Dockerfile" ]; then
            echo "Dockerfile exists ✅"
          else
            echo "ERROR: Dockerfile not found in the current directory ❌"
            echo "Searching for Dockerfile in subdirectories:"
            find . -name "Dockerfile" -type f
            echo ""
            echo "Creating a debug Dockerfile for troubleshooting"
            echo "FROM node:18-alpine" > Dockerfile
            echo "WORKDIR /app" >> Dockerfile
            echo "CMD [\"node\", \"-e\", \"console.log('Debug image created by GitHub Actions')\"]" >> Dockerfile
          fi
          
          echo "=== Dockerfile Content ==="
          cat Dockerfile
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile  # Explicitly specify the Dockerfile location
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max